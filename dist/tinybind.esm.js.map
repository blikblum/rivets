{"version":3,"file":"tinybind.esm.js","sources":["../src/constants.js","../src/parsers.js","../src/tinybind.js","../src/observer.js","../src/binding.js","../src/component-binding.js","../src/view.js","../src/adapter.js","../src/binders.js","../src/export.js"],"sourcesContent":["export const OPTIONS = [\n  'prefix',\n  'templateDelimiters',\n  'rootInterface',\n  'preloadData',\n  'handler'\n];\n\nexport const EXTENSIONS = [\n  'binders',\n  'formatters',\n  'components',\n  'adapters'\n];","/**\n * Used also in parsers.parseType\n * TODO outsource\n */\nconst PRIMITIVE = 0;\nconst KEYPATH = 1;\n\nconst QUOTED_STR = /^'.*'$|^\".*\"$/; // regex to test if string is wrapped in \" or '\n\n// Used in parsers.parseTemplate\nconst TEXT = 0;\nconst BINDING = 1;\n\n// Test if string is a json string\nexport function isJson(str) {\n  try {\n    const val = JSON.parse(str);\n    return (val instanceof Array || val instanceof Object) ? true : false;\n  }\n  catch (error) {\n    return false;\n  }\n}\n\n// Parser and tokenizer for getting the type and value from a string.\nexport function parseType(string) {\n  let type = PRIMITIVE;\n  let value = string;\n  if (QUOTED_STR.test(string)) {\n    value = string.slice(1, -1);\n  } else if (string === 'true') {\n    value = true;\n  } else if (string === 'false') {\n    value = false;\n  } else if (string === 'null') {\n    value = null;\n  } else if (string === 'undefined') {\n    value = undefined;\n  } else if (!isNaN(string)) {\n    value = Number(string);\n  } else if (isJson(string)) {\n    value = JSON.parse(string);\n  } else {\n    type = KEYPATH;\n  }\n  return {type: type, value: value};\n}\n\n// Template parser and tokenizer for mustache-style text content bindings.\n// Parses the template and returns a set of tokens, separating static portions\n// of text from binding declarations.\nexport function parseTemplate(template, delimiters) {\n  var tokens;\n  let length = template.length;\n  let index = 0;\n  let lastIndex = 0;\n  let open = delimiters[0], close = delimiters[1];\n\n  while (lastIndex < length) {\n    index = template.indexOf(open, lastIndex);\n\n    if (index < 0) {\n      if (tokens) {\n        tokens.push({\n          type: TEXT,\n          value: template.slice(lastIndex)\n        });\n      }\n\n      break;\n    } else {\n      tokens = tokens || [];\n      if (index > 0 && lastIndex < index) {\n        tokens.push({\n          type: TEXT,\n          value: template.slice(lastIndex, index)\n        });\n      }\n\n      lastIndex = index + open.length;\n      index = template.indexOf(close, lastIndex);\n\n      if (index < 0) {\n        let substring = template.slice(lastIndex - close.length);\n        let lastToken = tokens[tokens.length - 1];\n\n        if (lastToken && lastToken.type === TEXT) {\n          lastToken.value += substring;\n        } else {\n          tokens.push({\n            type: TEXT,\n            value: substring\n          });\n        }\n\n        break;\n      }\n\n      let value = template.slice(lastIndex, index).trim();\n\n      tokens.push({\n        type: BINDING,\n        value: value\n      });\n\n      lastIndex = index + close.length;\n    }\n  }\n\n  return tokens;\n}\n","import {EXTENSIONS} from './constants';\nimport {parseTemplate, parseType} from './parsers';\n\nconst tinybind = {\n  // Global binders.\n  binders: {},\n\n  // Global components.\n  components: {},\n\n  // Global formatters.\n  formatters: {},\n\n  // Global sightglass adapters.\n  adapters: {},\n\n  // Default attribute prefix.\n  _prefix: 'rv',\n\n  _fullPrefix: 'rv-',\n\n  get prefix () {\n    return this._prefix;\n  },\n\n  set prefix (value) {\n    this._prefix = value;\n    this._fullPrefix = value + '-';\n  },\n\n  parseTemplate: parseTemplate,\n\n  parseType: parseType,\n\n  // Default template delimiters.\n  templateDelimiters: ['{', '}'],\n\n  // Default sightglass root interface.\n  rootInterface: '.',\n\n  // Preload data by default.\n  preloadData: true,\n\n  // Default event handler.\n  handler: function(context, ev, binding) {\n    this.call(context, ev, binding.view.models);\n  },\n\n  // Sets the attribute on the element. If no binder above is matched it will fall\n  // back to using this binder.\n  fallbackBinder: function(el, value) {\n    if (value != null) {\n      el.setAttribute(this.type, value);\n    } else {\n      el.removeAttribute(this.type);\n    }  \n  },\n\n  // Merges an object literal into the corresponding global options.\n  configure: function(options) {\n    if (!options) {\n      return;\n    }\n    Object.keys(options).forEach(option => {\n      let value = options[option];\n\n      if (EXTENSIONS.indexOf(option) > -1) {\n        Object.keys(value).forEach(key => {\n          this[option][key] = value[key];\n        });\n      } else {\n        this[option] = value;\n      }\n    });\n  }\n};\n\nexport default tinybind;\n","\n// Check if a value is an object than can be observed.\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj !== null;\n}\n\n// Error thrower.\nfunction error(message) {\n  throw new Error('[Observer] ' + message);\n}\n\nvar adapters;\nvar interfaces;\nvar rootInterface;\n\n// Constructs a new keypath observer and kicks things off.\nfunction Observer(obj, keypath, callback) {\n  this.keypath = keypath;\n  this.callback = callback;\n  this.objectPath = [];\n  this.parse();\n  this.obj = this.getRootObject(obj);\n\n  if (isObject(this.target = this.realize())) {\n    this.set(true, this.key, this.target, this.callback);\n  }\n}\n\nObserver.updateOptions = function(options) {\n  adapters = options.adapters;\n  interfaces = Object.keys(adapters);\n  rootInterface = options.rootInterface;\n};\n\n// Tokenizes the provided keypath string into interface + path tokens for the\n// observer to work with.\nObserver.tokenize = function(keypath, root) {\n  var tokens = [];\n  var current = {i: root, path: ''};\n  var index, chr;\n\n  for (index = 0; index < keypath.length; index++) {\n    chr = keypath.charAt(index);\n\n    if (!!~interfaces.indexOf(chr)) {\n      tokens.push(current);\n      current = {i: chr, path: ''};\n    } else {\n      current.path += chr;\n    }\n  }\n\n  tokens.push(current);\n  return tokens;\n};\n\n// Parses the keypath using the interfaces defined on the view. Sets variables\n// for the tokenized keypath as well as the end key.\nObserver.prototype.parse = function() {\n  var path, root;\n\n  if (!interfaces.length) {\n    error('Must define at least one adapter interface.');\n  }\n\n  if (!!~interfaces.indexOf(this.keypath[0])) {\n    root = this.keypath[0];\n    path = this.keypath.substr(1);\n  } else {\n    root = rootInterface;\n    path = this.keypath;\n  }\n\n  this.tokens = Observer.tokenize(path, root);\n  this.key = this.tokens.pop();\n};\n\n// Realizes the full keypath, attaching observers for every key and correcting\n// old observers to any changed objects in the keypath.\nObserver.prototype.realize = function() {\n  var current = this.obj;\n  var unreached = -1;\n  var prev;\n  var token;\n\n  for (let index = 0; index < this.tokens.length; index++) {\n    token = this.tokens[index];\n    if (isObject(current)) {\n      if (typeof this.objectPath[index] !== 'undefined') {\n        if (current !== (prev = this.objectPath[index])) {\n          this.set(false, token, prev, this);\n          this.set(true, token, current, this);\n          this.objectPath[index] = current;\n        }\n      } else {\n        this.set(true, token, current, this);\n        this.objectPath[index] = current;\n      }\n\n      current = this.get(token, current);\n    } else {\n      if (unreached === -1) {\n        unreached = index;\n      }\n\n      prev = this.objectPath[index];\n      if (prev) {\n        this.set(false, token, prev, this);\n      }\n    }\n  }\n\n  if (unreached !== -1) {\n    this.objectPath.splice(unreached);\n  }\n\n  return current;\n};\n\n// Updates the keypath. This is called when any intermediary key is changed.\nObserver.prototype.sync = function() {\n  var next, oldValue, newValue;\n\n  if ((next = this.realize()) !== this.target) {\n    if (isObject(this.target)) {\n      this.set(false, this.key, this.target, this.callback);\n    }\n\n    if (isObject(next)) {\n      this.set(true, this.key, next, this.callback);\n    }\n\n    oldValue = this.value();\n    this.target = next;\n    newValue = this.value();\n    if (newValue !== oldValue || newValue instanceof Function) this.callback.sync();\n  } else if (next instanceof Array) {\n    this.callback.sync();\n  }\n};\n\n// Reads the current end value of the observed keypath. Returns undefined if\n// the full keypath is unreachable.\nObserver.prototype.value = function() {\n  if (isObject(this.target)) {\n    return this.get(this.key, this.target);\n  }\n};\n\n// Sets the current end value of the observed keypath. Calling setValue when\n// the full keypath is unreachable is a no-op.\nObserver.prototype.setValue = function(value) {\n  if (isObject(this.target)) {\n    adapters[this.key.i].set(this.target, this.key.path, value);\n  }\n};\n\n// Gets the provided key on an object.\nObserver.prototype.get = function(key, obj) {\n  return adapters[key.i].get(obj, key.path);\n};\n\n// Observes or unobserves a callback on the object using the provided key.\nObserver.prototype.set = function(active, key, obj, callback) {\n  var action = active ? 'observe' : 'unobserve';\n  adapters[key.i][action](obj, key.path, callback);\n};\n\n\n// Unobserves the entire keypath.\nObserver.prototype.unobserve = function() {\n  var obj;\n  var token;\n\n  for (let index = 0; index < this.tokens.length; index++) {\n    token = this.tokens[index];\n    obj = this.objectPath[index];\n    if (obj) {\n      this.set(false, token, obj, this);\n    }\n  }\n\n  if (isObject(this.target)) {\n    this.set(false, this.key, this.target, this.callback);\n  }\n};\n// traverse the scope chain to find the scope which has the root property\n// if the property is not found in chain, returns the root scope\nObserver.prototype.getRootObject = function (obj) {\n  var rootProp, current;\n  if (!obj.$parent) {\n    return obj;\n  }\n\n  if (this.tokens.length) {\n    rootProp = this.tokens[0].path;\n  } else {\n    rootProp = this.key.path;\n  }\n\n  current = obj;\n  while (current.$parent && (current[rootProp] === undefined)) {\n    current = current.$parent;\n  }\n\n  return current;\n};\n\nexport default Observer;\n","import {parseType} from './parsers';\nimport Observer from './observer';\n\nfunction getInputValue(el) {\n  let results = [];\n  if (el.type === 'checkbox') {\n    return el.checked;\n  } else if (el.type === 'select-multiple') {\n\n    el.options.forEach(option => {\n      if (option.selected) {\n        results.push(option.value);\n      }\n    });\n\n    return results;\n  } else {\n    return el.value;\n  }\n}\n\nconst FORMATTER_ARGS =  /[^\\s']+|'([^']|'[^\\s])*'|\"([^\"]|\"[^\\s])*\"/g;\nconst FORMATTER_SPLIT = /\\s+/;\n\n/**\n * Used also in parsers.parseType\n * TODO outsource\n */\nconst PRIMITIVE = 0;\nconst KEYPATH = 1;\n\n// A single binding between a model attribute and a DOM element.\nexport class Binding {\n  // All information about the binding is passed into the constructor; the\n  // containing view, the DOM node, the type of binding, the model object and the\n  // keypath at which to listen for changes.\n  constructor(view, el, type, keypath, binder, arg, formatters) {\n    this.view = view;\n    this.el = el;\n    this.type = type;\n    this.keypath = keypath;\n    this.binder = binder;\n    this.arg = arg;\n    this.formatters = formatters;\n    this.formatterObservers = {};\n    this.model = undefined;\n  }\n\n  // Observes the object keypath\n  observe(obj, keypath) {\n    return new Observer(obj, keypath, this);\n  }\n\n  parseTarget() {\n    if (this.keypath) {\n      let token = parseType(this.keypath);\n      if (token.type === PRIMITIVE) {\n        this.value = token.value;\n      } else if(token.type === KEYPATH){\n        this.observer = this.observe(this.view.models, this.keypath);\n        this.model = this.observer.target;\n      } else {\n        throw new Error('Unknown type in token', token);\n      }\n    } else {\n      this.value = undefined;\n    }\n  }\n\n  parseFormatterArguments(args, formatterIndex) {\n    return args\n      .map(parseType)\n      .map(({type, value}, ai) => {\n        if (type === PRIMITIVE) {\n          return value;\n        } else if (type === KEYPATH) {\n          if (!this.formatterObservers[formatterIndex]) {\n            this.formatterObservers[formatterIndex] = {};\n          }\n\n          let observer = this.formatterObservers[formatterIndex][ai];\n\n          if (!observer) {\n            observer = this.observe(this.view.models, value);\n            this.formatterObservers[formatterIndex][ai] = observer;\n          }\n\n          return observer.value();\n        } else {\n          throw new Error('Unknown type', type, value);\n        }\n      });\n  }\n\n  // Applies all the current formatters to the supplied value and returns the\n  // formatted value.\n  formattedValue(value) {\n    return this.formatters.reduce((result, declaration, index) => {\n      let args = declaration.match(FORMATTER_ARGS);\n      let id = args.shift();\n      let formatter = this.view.options.formatters[id];\n\n      const processedArgs = this.parseFormatterArguments(args, index);\n\n      if (formatter && (formatter.read instanceof Function)) {\n        result = formatter.read(result, ...processedArgs);\n      } else if (formatter instanceof Function) {\n        result = formatter(result, ...processedArgs);\n      }\n      return result;\n    }, value);\n  }\n\n  // Returns an event handler for the binding around the supplied function.\n  eventHandler(fn) {\n    let binding = this;\n    let handler = binding.view.options.handler;\n\n    return function(ev) {\n      handler.call(fn, this, ev, binding);\n    };\n  }\n\n  // Sets the value for the binding. This Basically just runs the binding routine\n  // with the supplied value formatted.\n  set(value) {\n    if ((value instanceof Function) && !this.binder.function) {\n      value = this.formattedValue(value.call(this.model));\n    } else {\n      value = this.formattedValue(value);\n    }\n\n    let routineFn = this.binder.routine || this.binder;\n\n    if (routineFn instanceof Function) {\n      routineFn.call(this, this.el, value);\n    }\n  }\n\n  // Syncs up the view binding with the model.\n  sync() {\n    if (this.observer) {\n      this.model = this.observer.target;\n      this.set(this.observer.value());\n    } else {\n      this.set(this.value);\n    }\n  }\n\n  // Publishes the value currently set on the input element back to the model.\n  publish() {\n    if (this.observer) {\n      var value = this.formatters.reduceRight((result, declaration, index) => {\n        const args = declaration.split(FORMATTER_SPLIT);\n        const id = args.shift();\n        const formatter = this.view.options.formatters[id];\n        const processedArgs = this.parseFormatterArguments(args, index);\n\n        if (formatter && formatter.publish) {\n          result = formatter.publish(result, ...processedArgs);\n        }\n        return result;\n      }, this.getValue(this.el));\n\n      this.observer.setValue(value);\n    }\n  }\n\n  // Subscribes to the model for changes at the specified keypath. Bi-directional\n  // routines will also listen for changes on the element to propagate them back\n  // to the model.\n  bind() {\n    this.parseTarget();\n\n    if (this.binder.hasOwnProperty('bind')) {\n      this.binder.bind.call(this, this.el);\n    }\n\n    if (this.view.options.preloadData) {\n      this.sync();\n    }\n  }\n\n  // Unsubscribes from the model and the element.\n  unbind() {\n    if (this.binder.unbind) {\n      this.binder.unbind.call(this, this.el);\n    }\n\n    if (this.observer) {\n      this.observer.unobserve();\n    }\n\n    Object.keys(this.formatterObservers).forEach(fi => {\n      let args = this.formatterObservers[fi];\n\n      Object.keys(args).forEach(ai => {\n        args[ai].unobserve();\n      });\n    });\n\n    this.formatterObservers = {};\n  }\n\n  // Updates the binding's model from what is currently set on the view. Unbinds\n  // the old model first and then re-binds with the new model.\n  update(models = {}) {\n    if (this.observer) {\n      this.model = this.observer.target;\n    }\n\n    if (this.binder.update) {\n      this.binder.update.call(this, models);\n    }\n  }\n\n  // Returns elements value\n  getValue(el) {\n    if (this.binder && this.binder.getValue) {\n      return this.binder.getValue.call(this, el);\n    } else {\n      return getInputValue(el);\n    }\n  }\n}\n","import tinybind from './tinybind';\nimport {parseType} from './parsers';\nimport {EXTENSIONS, OPTIONS} from './constants';\nimport {Binding} from './binding';\n\n/**\n * Used also in parsers.parseType\n * TODO outsource\n */\nconst PRIMITIVE = 0;\nconst KEYPATH = 1;\n\n// component view encapsulated as a binding within it's parent view.\nexport class ComponentBinding extends Binding {\n  // Initializes a component binding for the specified view. The raw component\n  // element is passed in along with the component type. Attributes and scope\n  // inflections are determined based on the components defined attributes.\n  constructor(view, el, type) {\n    super(view, el, type, null, null, null, null);\n    this.view = view;\n    this.el = el;\n    this.type = type;\n    this.component = view.options.components[this.type];\n    this.static = {};\n    this.observers = {};\n    this.upstreamObservers = {};\n    \n    let bindingPrefix = tinybind._fullPrefix;\n    \n    // parse component attributes\n    for (let i = 0, len = el.attributes.length; i < len; i++) {\n      let attribute = el.attributes[i];\n\n      // if attribute starts not with binding prefix. E.g. rv-\n      if (attribute.name.indexOf(bindingPrefix) !== 0) {\n        let propertyName = this.camelCase(attribute.name);\n        let token = parseType(attribute.value);\n        let stat = this.component.static;\n    \n        if (stat && stat.indexOf(propertyName) > -1) {\n          this.static[propertyName] = attribute.value;\n        } else if(token.type === PRIMITIVE) {\n          this.static[propertyName] = token.value;\n        } else if(token.type === KEYPATH) {\n          this.observers[propertyName] = attribute.value;\n        } else {\n          throw new Error('can\\'t parse component attribute', attribute, token);\n        }\n      }\n    }\n  }\n    \n    \n  // Intercepts `tinybind.Binding::sync` since component bindings are not bound to\n  // a particular model to update it's value.\n  sync() {}\n    \n  // Intercepts `tinybind.Binding::update` since component bindings are not bound\n  // to a particular model to update it's value.\n  update() {}\n    \n  // Intercepts `tinybind.Binding::publish` since component bindings are not bound\n  // to a particular model to update it's value.\n  publish() {}\n    \n  // Returns an object map using the component's scope inflections.\n  locals() {\n    let result = {};\n    \n    Object.keys(this.static).forEach(key => {\n      result[key] = this.static[key];\n    });\n    \n    Object.keys(this.observers).forEach(key => {\n      result[key] = this.observers[key].value();\n    });\n    \n    return result;\n  }\n    \n  // Returns a camel-cased version of the string. Used when translating an\n  // element's attribute name into a property name for the component's scope.\n  camelCase(string) {\n    return string.replace(/-([a-z])/g, grouped => {\n      return grouped[1].toUpperCase();\n    });\n  }\n    \n  // Intercepts `tinybind.Binding::bind` to build `@componentView` with a localized\n  // map of models from the root view. Bind `@componentView` on subsequent calls.\n  bind() {\n    var options = {};\n    if (!this.bound) {\n      Object.keys(this.observers).forEach(key => {\n        let keypath = this.observers[key];\n    \n        this.observers[key] = this.observe(this.view.models, keypath, (key => {\n          return () => {\n            this.componentView.models[key] = this.observers[key].value();\n          };\n        }).call(this, key));\n      });\n    \n      this.bound = true;\n    }\n    \n    if (this.componentView) {\n      this.componentView.bind();\n    } else {\n      this.el.innerHTML = this.component.template.call(this);\n      let scope = this.component.initialize.call(this, this.el, this.locals());\n      this.el._bound = true;\n    \n    \n      EXTENSIONS.forEach(extensionType => {\n        options[extensionType] = {};\n    \n        if (this.component[extensionType]) {\n          Object.keys(this.component[extensionType]).forEach(key => {\n            options[extensionType][key] = this.component[extensionType][key];\n          });\n        }\n    \n        Object.keys(this.view.options[extensionType]).forEach(key => {\n          if (options[extensionType][key]) {\n            options[extensionType][key] = this.view[extensionType][key];\n          }\n        });\n      });\n    \n      OPTIONS.forEach(option => {\n        if (this.component[option] != null) {\n          options[option] = this.component[option];\n        } else {\n          options[option] = this.view[option];\n        }\n      });\n    \n      //there's a cyclic dependency that makes imported View a dummy object. Use tinybind.bind\n      //this.componentView = new View(this.el, scope, options)\n      //this.componentView.bind()\n      this.componentView = tinybind.bind(Array.prototype.slice.call(this.el.childNodes), scope, options);\n    \n      Object.keys(this.observers).forEach(key => {\n        let observer = this.observers[key];\n        let models = this.componentView.models;\n    \n        let upstream = this.observe(models, key, ((key, observer) => {\n          return () => {\n            observer.setValue(this.componentView.models[key]);\n          };\n        }).call(this, key, observer));\n    \n        this.upstreamObservers[key] = upstream;\n      });\n    }\n  }\n    \n  // Intercept `tinybind.Binding::unbind` to be called on `@componentView`.\n  unbind() {\n    Object.keys(this.upstreamObservers).forEach(key => {\n      this.upstreamObservers[key].unobserve();\n    });\n    \n    Object.keys(this.observers).forEach(key => {\n      this.observers[key].unobserve();\n    });\n    \n    if (this.componentView) {\n      this.componentView.unbind.call(this);\n    }\n  }\n}","import tinybind from './tinybind';\nimport { Binding } from './binding';\nimport { ComponentBinding } from './component-binding';\nimport { parseTemplate } from './parsers';\n\nconst textBinder = {\n  routine: (node, value) => {\n    node.data = (value != null) ? value : '';\n  }\n};\n\nconst DECLARATION_SPLIT = /((?:'[^']*')*(?:(?:[^\\|']*(?:'[^']*')+[^\\|']*)+|[^\\|]+))|^$/g;\n\nconst parseNode = (view, node) => {\n  let block = false;\n\n  if (node.nodeType === 3) {\n    let tokens = parseTemplate(node.data, tinybind.templateDelimiters);\n\n    if (tokens) {\n      for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        let text = document.createTextNode(token.value);\n        node.parentNode.insertBefore(text, node);\n\n        if (token.type === 1) {\n          view.buildBinding(text, null, token.value, textBinder, null);\n        }\n      }\n\n      node.parentNode.removeChild(node);\n    }\n    block = true;\n  } else if (node.nodeType === 1) {\n    block = view.traverse(node);\n  }\n\n  if (!block) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n      parseNode(view, node.childNodes[i]);\n    }\n  }\n};\n\nconst bindingComparator = (a, b) => {\n  let aPriority = a.binder ? (a.binder.priority || 0) : 0;\n  let bPriority = b.binder ? (b.binder.priority || 0) : 0;\n  return bPriority - aPriority;\n};\n\nconst trimStr = (str) => {\n  return str.trim();\n};\n\n// A collection of bindings built from a set of parent nodes.\nexport default class View {\n  // The DOM elements and the model objects for binding are passed into the\n  // constructor along with any local options that should be used throughout the\n  // context of the view and it's bindings.\n  constructor(els, models, options) {\n    if (els.jquery || els instanceof Array) {\n      this.els = els;\n    } else {\n      this.els = [els];\n    }\n\n    this.models = models;\n    this.options = options;\n\n    this.build();\n  }\n\n\n  buildBinding(node, type, declaration, binder, arg) {\n    let pipes = declaration.match(DECLARATION_SPLIT).map(trimStr);\n    let keypath = pipes.shift();\n    this.bindings.push(new Binding(this, node, type, keypath, binder, arg, pipes));\n  }\n\n  // Parses the DOM tree and builds `Binding` instances for every matched\n  // binding declaration.\n  build() {\n    this.bindings = [];\n\n    let elements = this.els, i, len;\n    for (i = 0, len = elements.length; i < len; i++) {\n      parseNode(this, elements[i]);\n    }\n\n    this.bindings.sort(bindingComparator);\n  }\n\n  traverse(node) {\n    let bindingPrefix = tinybind._fullPrefix;\n    let block = node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE';\n    let attributes = node.attributes;\n    let bindInfos = [];\n    let starBinders = this.options.starBinders;\n    var type, binder, identifier, arg;\n\n\n    for (let i = 0, len = attributes.length; i < len; i++) {\n      let attribute = attributes[i];\n      // if attribute starts with the binding prefix. E.g. rv\n      if (attribute.name.indexOf(bindingPrefix) === 0) {\n        type = attribute.name.slice(bindingPrefix.length);\n        binder = this.options.binders[type];\n        arg = undefined;\n\n        if (!binder) {\n          for (let k = 0; k < starBinders.length; k++) {\n            identifier = starBinders[k];\n            if (type.slice(0, identifier.length - 1) === identifier.slice(0, -1)) {\n              binder = this.options.binders[identifier];\n              arg = type.slice(identifier.length - 1);\n              break;\n            }\n          }\n        }\n\n        if (!binder) {\n          binder = tinybind.fallbackBinder;\n        }\n\n        if (binder.block) {\n          this.buildBinding(node, type, attribute.value, binder, arg);\n          node.removeAttribute(attribute.name);\n          return true;\n        }\n\n        bindInfos.push({attr: attribute, binder: binder, type: type, arg: arg});\n      }\n    }\n\n    for (let i = 0; i < bindInfos.length; i++) {\n      let bindInfo = bindInfos[i];\n      this.buildBinding(node, bindInfo.type, bindInfo.attr.value, bindInfo.binder, bindInfo.arg);\n      node.removeAttribute(bindInfo.attr.name);\n    }\n\n    // bind components\n    if (!block) {\n      type = node.nodeName.toLowerCase();\n\n      if (this.options.components[type] && !node._bound) {\n        this.bindings.push(new ComponentBinding(this, node, type));\n        block = true;\n      }\n    }\n\n    return block;\n  }\n\n  // Binds all of the current bindings for this view.\n  bind() {\n    this.bindings.forEach(binding => {\n      binding.bind();\n    });\n  }\n\n  // Unbinds all of the current bindings for this view.\n  unbind() {\n    this.bindings.forEach(binding => {\n      binding.unbind();\n    });\n  }\n\n  // Syncs up the view with the model by running the routines on all bindings.\n  sync() {\n    this.bindings.forEach(binding => {\n      binding.sync();\n    });\n  }\n\n  // Publishes the input values from the view back to the model (reverse sync).\n  publish() {\n    this.bindings.forEach(binding => {\n      if (binding.binder && binding.binder.publishes) {\n        binding.publish();\n      }\n    });\n  }\n\n  // Updates the view's models along with any affected bindings.\n  update(models = {}) {\n    Object.keys(models).forEach(key => {\n      this.models[key] = models[key];\n    });\n\n    this.bindings.forEach(binding => {\n      if (binding.update) {\n        binding.update(models);\n      }\n    });\n  }\n}\n","// The default `.` adapter that comes with tinybind.js. Allows subscribing to\n// properties on plain objects, implemented in ES5 natives using\n// `Object.defineProperty`.\n\nconst ARRAY_METHODS = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'sort',\n  'reverse',\n  'splice'\n];\n\nconst adapter = {\n  counter: 0,\n  weakmap: {},\n\n  weakReference: function(obj) {\n    if (!obj.hasOwnProperty('__rv')) {\n      let id = this.counter++;\n\n      Object.defineProperty(obj, '__rv', {\n        value: id\n      });\n    }\n\n    if (!this.weakmap[obj.__rv]) {\n      this.weakmap[obj.__rv] = {\n        callbacks: {}\n      };\n    }\n\n    return this.weakmap[obj.__rv];\n  },\n\n  cleanupWeakReference: function(ref, id) {\n    if (!Object.keys(ref.callbacks).length) {\n      if (!(ref.pointers && Object.keys(ref.pointers).length)) {\n        delete this.weakmap[id];\n      }\n    }\n  },\n\n  stubFunction: function(obj, fn) {\n    let original = obj[fn];\n    let map = this.weakReference(obj);\n    let weakmap = this.weakmap;\n\n    obj[fn] = (...args) => {\n      let response = original.apply(obj, args);\n\n      Object.keys(map.pointers).forEach(r => {\n        let k = map.pointers[r];\n\n        if (weakmap[r]) {\n          if (weakmap[r].callbacks[k] instanceof Array) {\n            weakmap[r].callbacks[k].forEach(callback => {\n              callback.sync();\n            });\n          }\n        }\n      });\n\n      return response;\n    };\n  },\n\n  observeMutations: function(obj, ref, keypath) {\n    if (obj instanceof Array) {\n      let map = this.weakReference(obj);\n\n      if (!map.pointers) {\n        map.pointers = {};\n\n        ARRAY_METHODS.forEach(fn => {\n          this.stubFunction(obj, fn);\n        });\n      }\n\n      if (!map.pointers[ref]) {\n        map.pointers[ref] = [];\n      }\n\n      if (map.pointers[ref].indexOf(keypath) === -1) {\n        map.pointers[ref].push(keypath);\n      }\n    }\n  },\n\n  unobserveMutations: function(obj, ref, keypath) {\n    if ((obj instanceof Array) && (obj.__rv != null)) {\n      let map = this.weakmap[obj.__rv];\n\n      if (map) {\n        let pointers = map.pointers[ref];\n\n        if (pointers) {\n          let idx = pointers.indexOf(keypath);\n\n          if (idx > -1) {\n            pointers.splice(idx, 1);\n          }\n\n          if (!pointers.length) {\n            delete map.pointers[ref];\n          }\n\n          this.cleanupWeakReference(map, obj.__rv);\n        }\n      }\n    }\n  },\n\n  observe: function(obj, keypath, callback) {\n    var value;\n    let callbacks = this.weakReference(obj).callbacks;\n\n    if (!callbacks[keypath]) {\n      callbacks[keypath] = [];\n      let desc = Object.getOwnPropertyDescriptor(obj, keypath);\n\n      if (!desc || !(desc.get || desc.set || !desc.configurable)) {\n        value = obj[keypath];\n\n        Object.defineProperty(obj, keypath, {\n          enumerable: true,\n\n          get: () => {\n            return value;\n          },\n\n          set: newValue => {\n            if (newValue !== value) {\n              this.unobserveMutations(value, obj.__rv, keypath);\n              value = newValue;\n              let map = this.weakmap[obj.__rv];\n\n              if (map) {\n                let callbacks = map.callbacks[keypath];\n\n                if (callbacks) {\n                  callbacks.forEach(cb => {\n                      cb.sync();\n                  });\n                }\n\n                this.observeMutations(newValue, obj.__rv, keypath);\n              }\n            }\n          }\n        });\n      }\n    }\n\n    if (callbacks[keypath].indexOf(callback) === -1) {\n      callbacks[keypath].push(callback);\n    }\n\n    this.observeMutations(obj[keypath], obj.__rv, keypath);\n  },\n\n  unobserve: function(obj, keypath, callback) {\n    let map = this.weakmap[obj.__rv];\n\n    if (map) {\n      let callbacks = map.callbacks[keypath];\n\n      if (callbacks) {\n        let idx = callbacks.indexOf(callback);\n\n        if (idx > -1) {\n          callbacks.splice(idx, 1);\n\n          if (!callbacks.length) {\n            delete map.callbacks[keypath];\n            this.unobserveMutations(obj[keypath], obj.__rv, keypath);\n          }\n        }\n\n        this.cleanupWeakReference(map, obj.__rv);\n      }\n    }\n  },\n\n  get: function(obj, keypath) {\n    return obj[keypath];\n  },\n\n  set: (obj, keypath, value) => {\n    obj[keypath] = value;\n  }\n};\n\nexport default adapter;\n","import View from './view';\n\nconst getString = (value) => {\n  return value != null ? value.toString() : undefined;\n};\n\nconst times = (n, cb) => {\n  for (let i = 0; i < n; i++) cb();\n};\n\nfunction createView(binding, data, anchorEl) {\n  let template = binding.el.cloneNode(true);\n  let view = new View(template, data, binding.view.options);\n  view.bind();\n  binding.marker.parentNode.insertBefore(template, anchorEl);\n  return view;\n}\n\nconst binders = {\n  // Binds an event handler on the element.\n  'on-*': {\n    function: true,\n    priority: 1000,\n\n    unbind: function(el) {\n      if (this.handler) {\n        el.removeEventListener(this.arg, this.handler);\n      }\n    },\n\n    routine: function(el, value) {\n      if (this.handler) {\n        el.removeEventListener(this.arg, this.handler);\n      }\n\n      this.handler = this.eventHandler(value);\n      el.addEventListener(this.arg, this.handler);\n    }\n  },\n\n  // Appends bound instances of the element in place for each item in the array.\n  'each-*': {\n    block: true,\n\n    priority: 4000,\n\n    bind: function(el) {\n      if (!this.marker) {\n        this.marker = document.createComment(` tinybind: ${this.type} `);\n        this.iterated = [];\n\n        el.parentNode.insertBefore(this.marker, el);\n        el.parentNode.removeChild(el);\n      } else {\n        this.iterated.forEach(view => {\n          view.bind();\n        });\n      }\n    },\n\n    unbind: function(el) {\n      if (this.iterated) {\n        this.iterated.forEach(view => {\n          view.unbind();\n        });\n      }\n    },\n\n    routine: function(el, collection) {\n      let modelName = this.arg;\n      collection = collection || [];\n\n      // TODO support object keys to iterate over\n      if(!Array.isArray(collection)) {\n        throw new Error('each-' + modelName + ' needs an arry to iterate over, but it is', collection);\n      }\n\n      let indexProp = el.getAttribute('index-property') || '$index';\n\n      collection.forEach((model, index) => {\n        let data = {$parent: this.view.models};\n        data[indexProp] = index;\n        data[modelName] = model;\n        let view = this.iterated[index];\n\n        if (!view) {\n\n          let previous = this.marker;\n\n          if (this.iterated.length) {\n            previous = this.iterated[this.iterated.length - 1].els[0];\n          }\n\n          view = createView(this, data, previous.nextSibling);\n          this.iterated.push(view);\n        } else {\n          if (view.models[modelName] !== model) {\n            // search for a view that matches the model\n            let matchIndex, nextView;\n            for (let nextIndex = index + 1; nextIndex < this.iterated.length; nextIndex++) {\n              nextView = this.iterated[nextIndex];\n              if (nextView.models[modelName] === model) {\n                matchIndex = nextIndex;\n                break;\n              }\n            }\n            if (matchIndex !== undefined) {\n              // model is in other position\n              // todo: consider avoiding the splice here by setting a flag\n              // profile performance before implementing such change\n              this.iterated.splice(matchIndex, 1);\n              this.marker.parentNode.insertBefore(nextView.els[0], view.els[0]);\n              nextView.models[indexProp] = index;\n            } else {\n              //new model\n              nextView = createView(this, data, view.els[0]);\n            }\n            this.iterated.splice(index, 0, nextView);\n          } else {\n            view.models[indexProp] = index;\n          }\n        }\n      });\n\n      if (this.iterated.length > collection.length) {\n        times(this.iterated.length - collection.length, () => {\n          let view = this.iterated.pop();\n          view.unbind();\n          this.marker.parentNode.removeChild(view.els[0]);\n        });\n      }\n\n      if (el.nodeName === 'OPTION') {\n        this.view.bindings.forEach(binding => {\n          if (binding.el === this.marker.parentNode && binding.type === 'value') {\n            binding.sync();\n          }\n        });\n      }\n    },\n\n    update: function(models) {\n      let data = {};\n\n      //todo: add test and fix if necessary\n\n      Object.keys(models).forEach(key => {\n        if (key !== this.arg) {\n          data[key] = models[key];\n        }\n      });\n\n      this.iterated.forEach(view => {\n        view.update(data);\n      });\n    }\n  },\n\n  // Adds or removes the class from the element when value is true or false.\n  'class-*': function(el, value) {\n    let elClass = ` ${el.className} `;\n\n    if (value !== (elClass.indexOf(` ${this.arg} `) > -1)) {\n      if (value) {\n        el.className = `${el.className} ${this.arg}`;\n      } else {\n        el.className = elClass.replace(` ${this.arg} `, ' ').trim();\n      }\n    }\n  },\n\n  // Sets the element's text value.\n  text: (el, value) => {\n    el.textContent = value != null ? value : '';\n  },\n\n  // Sets the element's HTML content.\n  html: (el, value) => {\n    el.innerHTML = value != null ? value : '';\n  },\n\n  // Shows the element when value is true.\n  show: (el, value) => {\n    el.style.display = value ? '' : 'none';\n  },\n\n  // Hides the element when value is true (negated version of `show` binder).\n  hide: (el, value) => {\n    el.style.display = value ? 'none' : '';\n  },\n\n  // Enables the element when value is true.\n  enabled: (el, value) => {\n    el.disabled = !value;\n  },\n\n  // Disables the element when value is true (negated version of `enabled` binder).\n  disabled: (el, value) => {\n    el.disabled = !!value;\n  },\n\n  // Checks a checkbox or radio input when the value is true. Also sets the model\n  // property when the input is checked or unchecked (two-way binder).\n  checked: {\n    publishes: true,\n    priority: 2000,\n\n    bind: function(el) {\n      var self = this;\n      if (!this.callback) {\n        this.callback = function () {\n          self.publish();\n        };\n      }\n      el.addEventListener('change', this.callback);\n    },\n\n    unbind: function(el) {\n      el.removeEventListener('change', this.callback);\n    },\n\n    routine: function(el, value) {\n      if (el.type === 'radio') {\n        el.checked = getString(el.value) === getString(value);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  },\n\n  // Sets the element's value. Also sets the model property when the input changes\n  // (two-way binder).\n  value: {\n    publishes: true,\n    priority: 3000,\n\n    bind: function(el) {\n      this.isRadio = el.tagName === 'INPUT' && el.type === 'radio';\n      if (!this.isRadio) {\n        this.event = el.getAttribute('event-name') || (el.tagName === 'SELECT' ? 'change' : 'input');\n\n        var self = this;\n        if (!this.callback) {\n          this.callback = function () {\n            self.publish();\n          };\n        }\n\n        el.addEventListener(this.event, this.callback);\n      }\n    },\n\n    unbind: function(el) {\n      if (!this.isRadio) {\n        el.removeEventListener(this.event, this.callback);\n      }\n    },\n\n    routine: function(el, value) {\n      if (this.isRadio) {\n        el.setAttribute('value', value);\n      } else {\n        if (el.type === 'select-multiple') {\n          if (value instanceof Array) {\n            for (let i = 0; i < el.length; i++) {\n              let option = el[i];\n              option.selected = value.indexOf(option.value) > -1;\n            }\n          }\n        } else if (getString(value) !== getString(el.value)) {\n          el.value = value != null ? value : '';\n        }\n      }\n    }\n  },\n\n  // Inserts and binds the element and it's child nodes into the DOM when true.\n  if: {\n    block: true,\n    priority: 4000,\n\n    bind: function(el) {\n      if (!this.marker) {\n        this.marker = document.createComment(' tinybind: ' + this.type + ' ' + this.keypath + ' ');\n        this.attached = false;\n\n        el.parentNode.insertBefore(this.marker, el);\n        el.parentNode.removeChild(el);\n      } else if (this.bound === false && this.nested) {\n        this.nested.bind();\n      }\n      this.bound = true;\n    },\n\n    unbind: function() {\n      if (this.nested) {\n        this.nested.unbind();\n        this.bound = false;\n      }\n    },\n\n    routine: function(el, value) {\n      value = !!value;\n      if (value !== this.attached) {\n        if (value) {\n\n          if (!this.nested) {\n            this.nested = new View(el, this.view.models, this.view.options);\n            this.nested.bind();\n          }\n\n          this.marker.parentNode.insertBefore(el, this.marker.nextSibling);\n          this.attached = true;\n        } else {\n          el.parentNode.removeChild(el);\n          this.attached = false;\n        }\n      }\n    },\n\n    update: function(models) {\n      if (this.nested) {\n        this.nested.update(models);\n      }\n    }\n  }\n};\n\nexport default binders;\n","import tinybind from './tinybind';\nimport View from './view';\nimport {OPTIONS, EXTENSIONS} from './constants';\nimport adapter from './adapter';\nimport binders from './binders';\nimport Observer from './observer';\n\n// Returns the public interface.\n\ntinybind.binders = binders;\ntinybind.adapters['.'] = adapter;\n\n// Binds some data to a template / element. Returns a tinybind.View instance.\ntinybind.bind = (el, models, options) => {\n  let viewOptions = {};\n  models = models || {};\n  options = options || {};\n\n  EXTENSIONS.forEach(extensionType => {\n    viewOptions[extensionType] = Object.create(null);\n\n    if (options[extensionType]) {\n      Object.keys(options[extensionType]).forEach(key => {\n        viewOptions[extensionType][key] = options[extensionType][key];\n      });\n    }\n\n    Object.keys(tinybind[extensionType]).forEach(key => {\n      if (!viewOptions[extensionType][key]) {\n        viewOptions[extensionType][key] = tinybind[extensionType][key];\n      }\n    });\n  });\n\n  OPTIONS.forEach(option => {\n    let value = options[option];\n    viewOptions[option] = value != null ? value : tinybind[option];\n  });\n\n  viewOptions.starBinders = Object.keys(viewOptions.binders).filter(function (key) {\n    return key.indexOf('*') > 0;\n  });\n\n  Observer.updateOptions(viewOptions);\n\n  let view = new View(el, models, viewOptions);\n  view.bind();\n  return view;\n};\n\n// Initializes a new instance of a component on the specified element and\n// returns a tinybind.View instance.\t\t\ntinybind.init = (component, el, data = {}) => {\n  if (!el) {\n    el = document.createElement('div');\n  }\n\n  component = tinybind.components[component];\n  el.innerHTML = component.template.call(tinybind, el);\n  let scope = component.initialize.call(tinybind, el, data);\n\n  let view = tinybind.bind(el, scope);\n  view.bind();\n  return view;\n};\n\ntinybind.formatters.negate = tinybind.formatters.not = function (value) {\n  return !value;\n};\n\nexport default tinybind;\n"],"names":["OPTIONS","EXTENSIONS","PRIMITIVE","KEYPATH","QUOTED_STR","TEXT","BINDING","isJson","str","val","JSON","parse","Array","Object","error","parseType","string","type","value","test","slice","undefined","isNaN","Number","parseTemplate","template","delimiters","tokens","length","index","lastIndex","open","close","indexOf","push","substring","lastToken","trim","tinybind","prefix","_prefix","_fullPrefix","context","ev","binding","call","view","models","el","setAttribute","removeAttribute","options","keys","forEach","option","key","isObject","obj","message","Error","adapters","interfaces","rootInterface","Observer","keypath","callback","objectPath","getRootObject","target","realize","set","updateOptions","tokenize","root","current","i","path","chr","charAt","prototype","substr","pop","unreached","prev","token","get","splice","sync","next","oldValue","newValue","Function","setValue","active","action","unobserve","rootProp","$parent","getInputValue","results","checked","selected","FORMATTER_ARGS","FORMATTER_SPLIT","Binding","binder","arg","formatters","formatterObservers","model","observe","parseTarget","observer","parseFormatterArguments","args","formatterIndex","map","ai","formattedValue","reduce","result","declaration","match","id","shift","formatter","processedArgs","read","eventHandler","fn","handler","function","routineFn","routine","publish","reduceRight","split","getValue","bind","hasOwnProperty","preloadData","unbind","fi","update","ComponentBinding","component","components","static","observers","upstreamObservers","bindingPrefix","len","attributes","attribute","name","propertyName","camelCase","stat","locals","replace","grouped","toUpperCase","bound","componentView","innerHTML","scope","initialize","_bound","extensionType","childNodes","upstream","textBinder","node","data","DECLARATION_SPLIT","parseNode","block","nodeType","templateDelimiters","text","document","createTextNode","parentNode","insertBefore","buildBinding","removeChild","traverse","bindingComparator","a","b","aPriority","priority","bPriority","trimStr","View","els","jquery","build","pipes","bindings","elements","sort","nodeName","bindInfos","starBinders","identifier","binders","k","fallbackBinder","attr","bindInfo","toLowerCase","publishes","ARRAY_METHODS","adapter","counter","defineProperty","weakmap","__rv","ref","callbacks","pointers","original","weakReference","response","apply","r","stubFunction","idx","cleanupWeakReference","desc","getOwnPropertyDescriptor","configurable","unobserveMutations","observeMutations","getString","toString","times","n","cb","createView","anchorEl","cloneNode","marker","removeEventListener","addEventListener","createComment","iterated","collection","modelName","isArray","indexProp","getAttribute","previous","nextSibling","matchIndex","nextView","nextIndex","elClass","className","textContent","style","display","disabled","self","isRadio","tagName","event","attached","nested","viewOptions","create","filter","init","createElement","negate","not"],"mappings":"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"}